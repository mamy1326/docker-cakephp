{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}

<section class="content-header">
    <h1><?= h(${{ singularVar }}->{{ displayField }}) ?></h1>
</section>

<section class="content">
{% set done = [] %}
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title"><?= __('{{ pluralHumanName }}') ?></h3>
        </div>
        <table class="table table-bordered">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if associationFields[field] is defined %}
{% set details = associationFields[field] %}
            <tr>
                <th><?= __('{{ details.property|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
            </tr>
{% else %}
            <tr>
                <th><?= __('{{ field|humanize }}') ?></th>
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
            <tr>
                <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
            <tr>
                <th><?= __('{{ field|humanize }}') ?></th>
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
            <tr>
                <th><?= __('{{ field|humanize }}') ?></th>
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
            </tr>
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
            <tr>
                <th><?= __('{{ field|humanize }}') ?></th>
                <td><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></td>
            </tr>
{% endfor %}
{% endif %}
        </table>
{% if groupedFields.text %}
{% for field in groupedFields.text %}
        <div class="text">
            <strong><?= __('{{ field|humanize }}') ?></strong>
            <blockquote>
                <?= $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }})); ?>
            </blockquote>
        </div>
{% endfor %}
{% endif %}
{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
{% set otherSingularVar = alias|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}
        <div class="related">
            <h4><?= __('Related {{ otherPluralHumanName }}') ?></h4>
            <?php if (!empty(${{ singularVar }}->{{ details.property }})) : ?>
            <div class="table-responsive">
                <table>
                    <tr>
{% for field in details.fields %}
                        <th><?= __('{{ field|humanize }}') ?></th>
{% endfor %}
                        <th class="actions"><?= __('Actions') ?></th>
                    </tr>
                    <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}) : ?>
                    <tr>
{% for field in details.fields %}
                        <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
{% endfor %}
{% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
                    </tr>
                    <?php endforeach; ?>
                </table>
            </div>
            <?php endif; ?>
        </div>
{% endfor %}
    </div>
</section>
